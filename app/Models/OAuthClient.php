<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Model;
use App\Models\User;
use Exception;

class OAuthClient extends Model
{
    protected $table = 'oauth_clients';

   /**
    * Function to make client oauth credentials
    * 
    * @param: array
    * @return: array
    */
    public static function createClient($data)
    {
        // Get autogenerated client id and client secret id
        $client_id = clientId();
        $secret_id = secretId();

        // Perform query to get user based on email id 
        $query_user = User::where('email', $data['email'])
            ->get();
        
        // Get the user id from query
        $get_userId = $query_user[0]['id'];

        // Callback url given by user
        $redirect_url = $data['app_url'];
        
        try
        {
            // Instance of the OAuth Client
            $client = new OAuthClient();

            $client->client_id = $client_id;
            $client->secret = $secret_id;
            $client->callback = $redirect_url;
            $client_success = $client->save();

            if ( $client_success )
            {
                // An array which contains developer required information
                $dev_array = array(
                    'client id' => $client_id,
                    'secret_id' => $secret_id,
                    'redirect_url' => $redirect_url
                );

                return $dev_array;
            }

            throw new Exception("Database Error: Error occured while developer details insertion");
        }
        catch( \Exception $e)
        {
            // Logging the error
            errorReporting($e);
            return 0;
        }
    }

   /**
    * Function to Authenticate Client
    *
    * @param: client id
    * @param: client secret
    * @param: redirect
    *
    * @return: array
    */
    public static function authenticateClient($client)
    {
        $client_id = isset($client['client_id']) ? $client['client_id'] : '';
        $client_secret = isset($client['client_secret']) ? $client['client_secret'] : '';
        $redirect = isset($client['redirect']) ? $client['redirect'] : '';

        // Validating the client id , client secret id and redirect url
        $valid = OAuthClient::where('client_id', $client_id)
            ->where('secret', $client_secret)
            ->where('callback', $redirect)
            ->get();

        return $valid;
    }
}
